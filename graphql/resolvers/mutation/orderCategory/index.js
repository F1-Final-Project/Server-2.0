const graphql = require('graphql');const {    GraphQLID,    GraphQLNonNull,    GraphQLList,    GraphQLString,} = graphql;const OrderCategoryType = require('../../../schema/orderCategory');const OrderCategory = require('db-worker/lib/models/orderCategories');module.exports = {    addOrderCategory: {        type: OrderCategoryType,        args: {            title: {type: GraphQLNonNull(GraphQLList(GraphQLString))},        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                const orderCategory = new OrderCategory({                    title: args.title                });                return orderCategory.save();            } catch (err) {                throw err;            }        },    },    deleteOrderCategory: {        type: OrderCategoryType,        args: {            id: {type: GraphQLNonNull(GraphQLID)}        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                return OrderCategory.findByIdAndRemove(args.id);            } catch (err) {                throw err;            }        }    },    updateOrderCategory: {        type: OrderCategoryType,        args: {            id: {type: GraphQLNonNull(GraphQLID)},            title: {type: GraphQLNonNull(GraphQLList(GraphQLString))},        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                const orderCategory = {                    title: args.title                };                return OrderCategory.findByIdAndUpdate(                    args.id,                    {$set: orderCategory},                    {new: true},                )            } catch (err) {                throw err;            }        }    },};