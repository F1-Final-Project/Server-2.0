const graphql = require('graphql');const {    GraphQLString,    GraphQLID,    GraphQLInt,    GraphQLNonNull,} = graphql;const ReservedType = require('../../../schema/reserved');const Reserved = require('db-worker/lib/models/reserved');module.exports = {    addReserved: {        type: ReservedType,        args: {            date: {type: GraphQLNonNull(GraphQLString)},            table: {type: GraphQLNonNull(GraphQLInt)},            client: {type: GraphQLNonNull(GraphQLString)},            phone: {type: GraphQLString},        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                const reserved = new Reserved({                    date: new Date(args.date),                    table: args.table,                    client: args.client,                    phone: args.phone,                });                return reserved.save();            } catch (err) {                throw err;            }        },    },    deleteReserved: {        type: ReservedType,        args: {            id: {type: GraphQLNonNull(GraphQLID)}        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                return Reserved.findByIdAndRemove(args.id);            } catch (err) {                throw err;            }        }    }};