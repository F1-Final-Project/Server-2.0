const graphql = require('graphql');const {    GraphQLString,    GraphQLID,    GraphQLNonNull} = graphql;const CategoryType = require('../../../schema/category');const Category = require('db-worker/lib/models/category');module.exports = {    addCategory: {        type: CategoryType,        args: {            title: {type: GraphQLNonNull(GraphQLString)},            description: {type: GraphQLNonNull(GraphQLString)},            icon: {type: GraphQLString},        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                const category = new Category({                    title: args.title,                    description: args.description,                    icon: args.icon,                });                return category.save();            } catch (err) {                throw err;            }        },    },    deleteCategory: {        type: CategoryType,        args: {            id: {type: GraphQLNonNull(GraphQLID)}        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                return Category.findByIdAndRemove(args.id);            } catch (err) {                throw err;            }        }    },    updateCategory: {        type: CategoryType,        args: {            title: {type: GraphQLNonNull(GraphQLString)},            description: {type: GraphQLNonNull(GraphQLString)},            icon: {type: GraphQLString},        },        resolve: async (parent, args, req) => {            if (!req.isAuth) {                throw new Error('Unauthenticated!')            }            try {                const category = {                    title: args.title,                    description: args.description,                    icon: args.icon,                };                return Category.findByIdAndUpdate(                    args.id,                    {$set: category},                    {new: true},                )            } catch (err) {                throw err;            }        }    },};