const graphql = require('graphql');const chai = require('chai');const userType = require('../graphql/schema/user');const chaiHttp = require('chai-http');const expect = chai.expect;chai.use(chaiHttp);describe('GraphQL', () => {    it('Should have an id field of type ID', () => {        expect(userType.getFields()).to.have.property('id');        expect(userType.getFields().id.type).to.deep.equals(graphql.GraphQLID);    });    it('Should have an email field of type String', () => {        expect(userType.getFields()).to.have.property('email');        expect(userType.getFields().email.type).to.deep.equals(graphql.GraphQLString);    });    it('Should have an firstName field of type String', () => {        expect(userType.getFields()).to.have.property('firstName');        expect(userType.getFields().firstName.type).to.deep.equals(graphql.GraphQLString);    });    it('Should have an lastName field of type String', () => {        expect(userType.getFields()).to.have.property('lastName');        expect(userType.getFields().lastName.type).to.deep.equals(graphql.GraphQLString);    });    it('Should have an permission field of type String', () => {        expect(userType.getFields()).to.have.property('permission');        expect(userType.getFields().permission.type).to.deep.equals(graphql.GraphQLString);    });});